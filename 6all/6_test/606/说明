



形参：是一种自动化的对象，函数开始时为形参申请空间，当我们调用函数时会发生形参实例化

普通变量：全局区的普通变量默认初始化，局部普通变量，默认初始化是随机值；
局部静态变量：静态变量一定是在全局区的，准确说是全局区的静态区；局部静态变量的声明周期
              是在本函数内，当函数退出后，并不会直接消失，而是还会继续存在，但是你是不能              用的，https://blog.csdn.net/zdb292034/article/details/80720051





              1. 静态局部变量 
              在局部变量的说明前再加上static说明符就构成静态局部变量。例如：
              static int a,b; static float array[5]={1,2,3,4,5}；
              静态局部变量属于静态存储方式，它具有以下特点： 
              (1)静态局部变量在函数内定义，但不象自动变量那样，当调用时就存在，退出函数时就消失。静态局部变量始终存在着，也就是说它的生存期为整个源程序。 
              (2)静态局部变量的生存期虽然为整个源程序，但是其作用域仍与自动变量相同，即只能在定义该变量的函数内使用该变量。退出该函数后，尽管该变量还继续存在，但不能使用它。
              (3)允许对构造类静态局部量赋初值。若未赋以初值，则由系统自动赋以0值。 
              (4)对基本类型的静态局部变量若在说明时未赋以初值，则系统自动赋予0值。而对自动变量不赋初值，则其值是不定的。根据静态局部变量的特点，可以看出它是一种生存期为整个源程序的量。虽然离开定义它的函数后不能使用，但如再次调用定义它的函数时，它又可继续使用，而且保存了前次被调用后留下的值。因此，当多次调用一个函数且要求在调用之间保留某些变量的值时，可考虑采用静态局部变量。虽然用全局变量也可以达到上述目的，但全局变量有时会造成意外的副作用，因此仍以采用局部静态变量为宜。
              2.静态全局变量
              全局变量(外部变量)的说明之前再冠以static 就构成了静态的全局变量。全局变量本身就是静态存储方式，静态全局变量当然也是静态存储方式。这两者在存储方式上并无不同。这两者的区别虽在于非静态全局变量的作用域是整个源程序，当一个源程序由多个源文件组成时，非静态的全局变量在各个源文件中都是有效的。而静态全局变量则限制了其作用域，即只在定义该变量的源文件内有效，在同一源程序的其它源文件中不能使用它。由于静态全局变量的作用域局限于一个源文件内，只能为该源文件内的函数公用，因此可以避免在其它源文件中引起错误。从以上分析可以看出， 把局部变量改变为静态变量后是改变了它的存储方式即改变了它的生存期。把全局变量改变为静态变量后是改变了它的作用域，限制了它的使用范围。因此static 这个说明符在不同的地方所起的作用是不同的。应予以注意。
